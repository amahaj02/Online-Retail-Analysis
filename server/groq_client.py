import os
from groq import Groq
import re
from dotenv import load_dotenv

load_dotenv()

client = Groq(api_key=os.getenv("GROQ_API_KEY"))

def get_sql_from_prompt(user_prompt: str) -> str:
    prompt = f"""
You are a helpful assistant that converts natural language questions into SQL queries.
limit results to 20 rows,unless the user specifies otherwise.
The database schema is generated by the following SQL code:
--
-- Name: customers; Type: TABLE; Schema: public; Owner: -
--
CREATE TABLE public.customers (
    customer_id integer NOT NULL,
    country text
);
--
-- Name: invoice_items; Type: TABLE; Schema: public; Owner: -
--
CREATE TABLE public.invoice_items (
    invoice_id text NOT NULL,
    product_id text NOT NULL,
    quantity integer,
    customer_id integer NOT NULL
);
--
-- Name: invoices; Type: TABLE; Schema: public; Owner: -
--
CREATE TABLE public.invoices (
    invoice_id text NOT NULL,
    invoice_date timestamp without time zone
);
--
-- Name: products; Type: TABLE; Schema: public; Owner: -
--
CREATE TABLE public.products (
    product_id text NOT NULL,
    description text,
    unit_price numeric
);
--
-- Name: customers customers_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--
ALTER TABLE ONLY public.customers
ADD CONSTRAINT customers_pkey PRIMARY KEY (customer_id);
--
-- Name: invoice_items invoice_items_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--
ALTER TABLE ONLY public.invoice_items
ADD CONSTRAINT invoice_items_pkey PRIMARY KEY (invoice_id, product_id, customer_id);
--
-- Name: invoices invoices_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--
ALTER TABLE ONLY public.invoices
ADD CONSTRAINT invoices_pkey PRIMARY KEY (invoice_id);
--
-- Name: products products_pkey; Type: CONSTRAINT; Schema: public; Owner: -
--
ALTER TABLE ONLY public.products
ADD CONSTRAINT products_pkey PRIMARY KEY (product_id);
--
-- Name: invoice_items invoice_items_customer_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--
ALTER TABLE ONLY public.invoice_items
ADD CONSTRAINT invoice_items_customer_id_fkey FOREIGN KEY (customer_id) REFERENCES public.customers(customer_id);
--
-- Name: invoice_items invoice_items_invoice_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--
ALTER TABLE ONLY public.invoice_items
ADD CONSTRAINT invoice_items_invoice_id_fkey FOREIGN KEY (invoice_id) REFERENCES public.invoices(invoice_id);
--
-- Name: invoice_items invoice_items_product_id_fkey; Type: FK CONSTRAINT; Schema: public; Owner: -
--
ALTER TABLE ONLY public.invoice_items
ADD CONSTRAINT invoice_items_product_id_fkey FOREIGN KEY (product_id) REFERENCES public.products(product_id);
--
-- PostgreSQL database dump complete

Return only the SQL query. Do NOT explain anything. The question is:

{user_prompt}
    """

    chat_completion = client.chat.completions.create(
        model="llama3-8b-8192",
        messages=[
            {"role": "system", "content": "You are a SQL generator."},
            {"role": "user", "content": prompt}
        ],
        temperature=0.2
    )

    sql = chat_completion.choices[0].message.content.strip()
    sql = re.sub(r"^```sql|^```|```$", "", sql, flags=re.IGNORECASE).strip()

    return sql
